name: Deploy with Docker Compose

on:
  push:
    branches:
      - main  # adjust the branch name as needed

jobs:
  deploy:
    runs-on: ubuntu-latest  # or specify a different runner as needed

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
      
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      
      - name: Copy Project to EC2 Instance
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}  # EC2 instance IP or hostname
          username: ${{ secrets.EC2_USERNAME }}  # SSH username
          key: ${{ secrets.EC2_SSH_KEY }}  # SSH private key
          source: "."  # Path to your project directory
          target: "/home/ubuntu/project"  # Destination directory on EC2
      
      - name: Download env File from S3
        run: |
          aws s3 cp ${{ secrets.ENV_FILE_URL }} /home/ubuntu/project/${{ secrets.ENV_FILE_NAME }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
      - name: Download sql File from S3
        run: |
          aws s3 cp ${{ secrets.SQL_FILE_URL }} /home/ubuntu/project/${{ secrets.SQL_FILE_NAME }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Download script File from S3
        run: |
          aws s3 cp ${{ secrets.SCRIPT_FILE_URL }} /home/ubuntu/project/${{ secrets.SCRIPT_FILE_NAME }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Run Docker Compose
        run: |
          cd /home/ubuntu/project
          docker-compose up -d --env-file ${{ secrets.ENV_FILE_NAME }}
